<script src="https://cdn.jsdelivr.net/npm/@hapi/nes@13.0.1/lib/client.min.js"></script>

<script>

    /**
     * This script is used to connect to the server using the nes client
     * and listen for refreshes on the server.
     *
     * It will never run in production, only in development.
     * This is autogenerated by the watch script to include the server
     * host and port provided by the watch server.
     */
    (async () => {

        const __$client = new nes.Client('ws://<%- host %>:<%- port %>');

        let retries = 0;
        __$client.onError = (error) => {

            if (error.message.toLowerCase().includes('connection')) {

                if (retries > 5) {
                    window.location.reload()
                }

                retries++;
            }

            console.error(error);
        };

        try {

            await __$client.connect()

            __$client.subscribe('/', (update) => {

                if (update.reload) {
                    window.location.reload()
                }
            });

            __$client.message({ browser: true });
        }
        catch (_) {}
    })();
</script>